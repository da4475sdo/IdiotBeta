{"version":3,"sources":["../../../../assets/scripts/assets/scripts/player.js"],"names":["Global","require","Game","floorRestAction","cc","Class","extends","Component","properties","xPosition","yPosition","speed","isOnFloor","jumpLevel","baseSpeedLevel","speedLevel","fromFloorHeight","stopRange","moveYDuration","fallDuration","isStatusOn","status","minStatusTime","maxStatusTime","jumpLandX","currentFloor","default","type","Node","jumpAudioSource","url","AudioClip","landAudioSource","chaosAudioSource","rageAudioSource","deadAudioSource","onLoad","x","y","getComponent","isPlayerOn","inputManager","setAccelerometerEnabled","systemEvent","on","SystemEvent","EventType","DEVICEMOTION","onDeviceMotionEvent","startStatusCheck","random0To1","event","deviceMotion","acc","distance","playerToFloorCenterDis","Math","sqrt","node","_currentFloor","width","setPlayerAnimationDirection","groupMove","playerFall","floorRest","onBeginContact","contact","selfCollider","otherCollider","otherColliderNode","group","playerFailed","setPlayerOnFloorState","score","tag","game","setScore","playAudio","_instanceId","notFirst","stopAction","onEndContact","onPreSolve","onPostSolve","_switch","playerYMoveDirecition","floorMove","playerMove","_floorAngle","rotation","yMoveDistance","sin","abs","cos","playerXPosition","distanceFromCenter","floorWidth","rotateAngle","baseRotateAngle","floorAngle","update","dt","floorRotate","rotateBy","rotateDuration","callback","callFunc","getFloorAngle","_maxFloorAngle","maxFloorAngle","runAction","sequence","sceneWidth","sceneHeight","height","leftBound","rightBound","bottomBound","playerX","playerY","playerSpeed","_jumpLevel","landX","jumpHeight","setJumpHeight","fallXMove","jumpBy","p","easing","easeOut","rotateTo","floorArray","splice","length","director","loadScene","audioEngine","stop","BGM","_duration","scheduleOnce","playerStatusChange","randomNum","random","statusControl","statusNode","getChildByName","statusNodeSprite","Sprite","statusTime","statusNormal","statusChaos","statusRage","parseInt","active","that","loadImage","_spriteFrame","setContentSize","size","spriteFrame","setScale","target","audioSource","isLoop","play","filePath","loader","loadRes","SpriteFrame","err"],"mappings":"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","file":"player.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["var Global=require(\"global\");\nvar Game=require(\"game\");\nvar floorRestAction=null;\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        xPosition:0,\n        yPosition:0,\n        speed:2,\n        isOnFloor:true,\n        jumpLevel:5,\n        baseSpeedLevel:7,\n        speedLevel:3,\n        //player距离的地板的高度\n        fromFloorHeight:20,\n        //player静止的距离范围\n        stopRange:5,\n        //floor下降时，player下落移动时长\n        moveYDuration:0.2,\n        //player下落的时长\n        fallDuration:1,\n        //是否开启状态系统\n        isStatusOn:true,\n        //0:正常;1:混乱;2:狂暴\n        status:0,\n        //状态最小持续时间\n        minStatusTime:5,\n        //状态最大持续时间\n        maxStatusTime:10,\n        //跳跃的终点\n        jumpLandX:0,\n         // player node 当前所在的floor node\n        currentFloor: {\n            default: null,\n            type: cc.Node\n        },\n        //跳跃音效 \n        jumpAudioSource: {\n            url: cc.AudioClip,\n            default: null\n        },\n        //着陆音效 \n        landAudioSource: {\n            url: cc.AudioClip,\n            default: null\n        },\n        //混乱音效 \n        chaosAudioSource: {\n            url: cc.AudioClip,\n            default: null\n        },\n        //狂暴音效 \n        rageAudioSource: {\n            url: cc.AudioClip,\n            default: null\n        },\n        //死亡音效 \n        deadAudioSource: {\n            url: cc.AudioClip,\n            default: null\n        },   \n    },\n\n    // use this for initialization\n    onLoad: function () {\n        //初始化player node 位置\n        this.xPosition=this.currentFloor.x;\n        this.yPosition=this.currentFloor.y+this.fromFloorHeight;\n        this.currentFloor.getComponent(\"floor\").isPlayerOn=true;\n        //绑定重力感应事件\n        cc.inputManager.setAccelerometerEnabled(true);\n        cc.systemEvent.on(cc.SystemEvent.EventType.DEVICEMOTION, this.onDeviceMotionEvent, this);\n        //在5-8秒内进行状态变化\n        this.startStatusCheck(cc.random0To1()*3+5);\n    },\n\n    onDeviceMotionEvent:function (event){\n        if(this.isOnFloor){\n            //player移动的距离\n            var deviceMotion=event.acc.x,\n            distance=deviceMotion*this.speed*this.speedLevel,\n            playerToFloorCenterDis=Math.sqrt((this.node.x-this.currentFloor.x)*(this.node.x-this.currentFloor.x)\n            +(this.node.y-this.currentFloor.y)*(this.node.y-this.currentFloor.y)),\n            _currentFloor=this.currentFloor.getComponent(\"floor\");\n            //判断player是在floor上移动还是下落\n            if((playerToFloorCenterDis<(this.currentFloor.width+this.node.width)/2)){\n                this.setPlayerAnimationDirection(distance);\n                this.groupMove(distance);\n            }else{\n                this.playerFall(distance);\n                this.floorRest();\n            }\n        }\n    },\n\n    // 只在两个碰撞体开始接触时被调用一次\n    onBeginContact: function (contact, selfCollider, otherCollider) {\n        var otherColliderNode=otherCollider.node;\n        //当player触碰到上下边界时，游戏结束\n        if(otherColliderNode.group===\"boundary\"){\n            this.playerFailed();\n            return;\n        }\n        //当player下落到新的floor时调用\n        if(otherColliderNode!=this.currentFloor){\n            this.currentFloor=otherColliderNode;\n            //同步player X坐标\n            this.xPosition=this.node.x;\n            this.setPlayerOnFloorState(true);\n            var score=otherColliderNode.tag;\n            //设置游戏得分\n            this.game&&this.game.setScore(score);\n            //播放落地音效\n            this.playAudio(this,this.landAudioSource,false);\n        }else{\n            //防止跳上同一块木板不动的情况\n            if((floorRestAction&&floorRestAction._instanceId)||Global.notFirst){\n                this.currentFloor.stopAction(floorRestAction);\n            }\n            this.setPlayerOnFloorState(true);\n        }\n    },\n\n    // 只在两个碰撞体结束接触时被调用一次\n    onEndContact: function (contact, selfCollider, otherCollider) {\n    },\n\n    // 每次将要处理碰撞体接触逻辑时被调用\n    onPreSolve: function (contact, selfCollider, otherCollider) {\n    },\n\n    // 每次处理完碰撞体接触逻辑时被调用\n    onPostSolve: function (contact, selfCollider, otherCollider) {\n    },\n\n    setPlayerOnFloorState:function (_switch){\n        this.isOnFloor=_switch;\n        this.currentFloor.getComponent(\"floor\").isPlayerOn=_switch;\n    },\n\n    groupMove:function (distance){\n        var playerYMoveDirecition=this.floorMove(),\n            _currentFloor=this.currentFloor.getComponent('floor');\n        this.playerMove(distance,playerYMoveDirecition,_currentFloor);\n    },\n\n    playerMove:function (distance,playerYMoveDirecition,_currentFloor){\n        var _floorAngle=this.currentFloor.rotation,\n            yMoveDistance=distance*Math.sin(Math.abs(_floorAngle)*0.0174533);\n            this.xPosition+=(distance*Math.cos(Math.abs(_floorAngle)*0.0174533));\n        //根据角度更新速度等级\n        _floorAngle*distance?this.speedLevel=this.baseSpeedLevel+Math.abs(_floorAngle):this.speedLevel=this.baseSpeedLevel-Math.abs(_floorAngle);\n    },\n\n    floorMove:function (){\n        var playerXPosition=this.xPosition,\n            distanceFromCenter=playerXPosition-this.currentFloor.x,\n            playerYMoveDirecition=true,\n            floorWidth=this.currentFloor.width,\n            _currentFloor=this.currentFloor.getComponent('floor');\n        //当player在floor的左半部分时，旋转角度为负\n        if(distanceFromCenter<=-this.stopRange){\n            _currentFloor.rotateAngle=-_currentFloor.baseRotateAngle;\n        }else{\n            _currentFloor.rotateAngle=Math.abs(_currentFloor.baseRotateAngle);\n        }\n        //当floor上的player下降时\n        if(_currentFloor.floorAngle>0){\n            playerYMoveDirecition=true;\n        }else{\n            playerYMoveDirecition=false; \n        }\n        //返回player的垂直移动方向\n        return playerYMoveDirecition;\n    },\n\n    update (dt) {\n        //player在floor上时\n        if(this.isOnFloor){\n            var _currentFloor=this.currentFloor.getComponent('floor'),\n                floorRotate=cc.rotateBy(_currentFloor.rotateDuration, _currentFloor.rotateAngle),\n                callback = cc.callFunc(this.getFloorAngle, this,_currentFloor),\n                _maxFloorAngle=_currentFloor.maxFloorAngle-_currentFloor.baseRotateAngle;\n            //控制player横向移动\n            this.node.x=this.xPosition;\n            //控制floor的最大旋转角度\n            if((_currentFloor.floorAngle<_maxFloorAngle&&_currentFloor.floorAngle>-_maxFloorAngle)\n            ||(_currentFloor.floorAngle*_currentFloor.rotateAngle<=0)){\n                this.currentFloor.runAction(cc.sequence(floorRotate,callback));\n            }\n        }else{//player自由下落时\n            if(this.game){\n                var sceneWidth=this.game.node.width,\n                sceneHeight=this.game.node.height,\n                leftBound=-sceneWidth/2,\n                rightBound=sceneWidth/2,\n                bottomBound=-sceneHeight/2,\n                playerX=this.node.x,\n                playerY=this.node.y;\n                //避免player运动过快，物理碰撞系统无法检测问题\n                if(playerX<=leftBound||playerX>=rightBound||playerY<bottomBound){\n                    this.playerFailed();\n                }\n            }\n        }\n    },\n\n    getFloorAngle:function (currentFloor){\n        var _currentFloor=currentFloor.getComponent(\"floor\");\n        _currentFloor.floorAngle=this.currentFloor.rotation;\n    },\n\n    playerFall:function (distance){\n        this.setPlayerOnFloorState(false);\n        var playerSpeed=Math.abs(this.speed),\n            _jumpLevel=this.jumpLevel+Math.abs(distance/3),\n            landX=playerSpeed*distance*_jumpLevel,\n            jumpHeight=this.setJumpHeight(Math.abs(distance)),\n            fallXMove=cc.jumpBy(this.fallDuration,cc.p(landX,0),jumpHeight,1).easing(cc.easeOut(3.0));\n        this.jumpLandX=this.xPosition+landX;\n        this.playAudio(this,this.jumpAudioSource,false);\n        this.node.runAction(fallXMove);\n    },\n\n    floorRest:function (){\n        floorRestAction=cc.rotateTo(0.5,0);\n        this.currentFloor.runAction(floorRestAction);\n    },\n\n    playerFailed:function (){\n        //清空floor位置数组\n        Game.floorArray.splice(0,Game.floorArray.length);\n        this.playAudio(this,this.deadAudioSource,false);\n        //记录最后得分\n        Global.score=this.game.score;\n        //转换到游戏结束场景\n        cc.director.loadScene(\"gameOver\");\n        //关闭背景音乐\n        cc.audioEngine.stop(this.BGM);\n    },\n\n    //开启状态检测\n    startStatusCheck:function (_duration){\n        this.scheduleOnce(this.playerStatusChange,_duration);\n    },\n\n    playerStatusChange:function (){\n        var randomNum=Math.random();\n        if(this.isStatusOn&&this.status===0){\n            this.status=randomNum<=0.3?1:2;\n            this.statusControl(this.status);\n        }\n    },\n\n    statusControl:function (status){\n        var statusNode=this.node.getChildByName(\"Status\"),\n            statusNodeSprite=statusNode.getComponent(cc.Sprite),\n            statusTime=(this.maxStatusTime-this.minStatusTime)*Math.random()+this.minStatusTime;\n        switch(status){\n            case 0:this.statusNormal(statusNode);break;\n            case 1:this.statusChaos(statusNode,statusNodeSprite);break;\n            case 2:this.statusRage(statusNode,statusNodeSprite);break;\n        };\n        //在状态持续时间结束后，恢复player的正常状态\n        this.scheduleOnce(function (){\n            this.statusNormal(statusNode);\n        },parseInt(statusTime));\n    },\n\n    //正常状态\n    statusNormal:function (statusNode){\n        this.status=0;\n        //隐藏状态节点\n        statusNode.active=false;\n        //初始化player状态\n        this.baseSpeedLevel=1;\n        this.speed=Math.abs(this.speed);\n        //定时进行下一次状态变化\n        this.startStatusCheck(cc.random0To1()*5+10);\n    },\n\n    //混乱状态，人物的移动方向和控制方向相反\n    statusChaos:function (statusNode,statusNodeSprite){\n        var that=this;\n        that.status=1;\n        that.loadImage(\"chaos\",function (_spriteFrame){\n            statusNode.setContentSize(cc.size(47.7, 84));\n            statusNodeSprite.spriteFrame=_spriteFrame;\n            //显示状态节点\n            statusNode.active=true;\n            //播放混乱音效\n            that.playAudio(that,that.chaosAudioSource,false);\n        });\n        that.speed=-that.speed;\n    },\n\n    //狂暴状态，人物的移动速度加快\n    statusRage:function (statusNode,statusNodeSprite){\n        var that=this;\n        that.status=2;\n        that.loadImage(\"rage\",function (_spriteFrame){\n            statusNode.setContentSize(cc.size(62.9, 61.2));\n            statusNodeSprite.spriteFrame=_spriteFrame;\n            //显示状态节点\n            statusNode.active=true;\n            //播放狂暴音效\n            that.playAudio(that,that.rageAudioSource,false);\n        });\n        that.baseSpeedLevel=Math.abs(that.baseSpeedLevel)*5;\n    },\n\n    setJumpHeight:function (distance){\n        var jumpHeight=0;\n        if(distance<=10){\n            jumpHeight=20;\n        }else if(distance<=20){\n            jumpHeight=80\n        }else{\n            jumpHeight=100;\n        }\n        return jumpHeight;\n    },\n\n    setPlayerAnimationDirection:function (distance){\n        if(distance>=0){\n            this.node.setScale(1,1);\n        }else{\n            this.node.setScale(-1,1);\n        }\n    },\n\n    playAudio:function (target,audioSource,isLoop){\n        cc.audioEngine.play(audioSource, isLoop, 1);\n    },\n    \n    //读取图片，根路径为resource文件夹\n    loadImage:function (filePath,callback){\n        var url = filePath;\n        cc.loader.loadRes(url, cc.SpriteFrame, function (err, _spriteFrame) {\n            callback(_spriteFrame);\n        });\n    },\n});\n"]}